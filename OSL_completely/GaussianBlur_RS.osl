// 此代码改编自oc自带的高斯模糊
//
// 输入端口1为文件名，可以用constant节点的String类型链接，或者直接输入
// 输入端口2为重复次数，0~10
// 输入端口3为重复范围，以uv计算。0.01即为1%的范围。
//
// 目前已知bug：此节点替代了texture节点，无法实现tex节点无缝重复的uv功能（这个功能应该是RS自带的特性）。
//
// 内容整理：水桶visn

shader GaussianBlur(
    string filenames = "",
    int iterations = 5
        [[int min = 0, int max = 10,
          string label = "Step count",
          string description = "Number of steps"]],
    float stepSize = 0.001
        [[float min = 0.00001, float max = 0.01,
          string label = "Step size",
          string description = "UV distance between steps"]],
    output color out = 0)
{
    if (iterations == 0)
    {
        // just return the input with the right UV mapping
        out =  texture(filenames,u,v);
    }
    else
    {
        float kernel[11];
        // initialize the kernel
        float normFactor = 0;
        for (int i = 0; i <= iterations; ++i)
        {
            // use normal probability density function with sigma = 7
            float n  = 0.05699175 * exp(-0.01020408 * i * i);
            normFactor += i == 0 ? n : 2*n;
            kernel[i] = n;
        }
        // average the neighbours
        color c  = 0;
        for (int i = -iterations; i <= iterations; ++i)
        {
            float n = kernel[iterations - abs(i)];
            for (int j = -iterations; j <= iterations; ++j)
            {
                float f = n * kernel[iterations - abs(j)];
                c += f * texture(filenames, u + i * stepSize, v + j * stepSize);
            }
        }
       out=pow(c/(normFactor*normFactor), 2.2);
    }
}
